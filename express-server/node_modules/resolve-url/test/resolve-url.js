var test = require("tape")
var resolveUrl = require("../")
"use strict"
test("resolveUrl", function(t) {
  t.plan(7)
  t.equal(typeof resolveUrl, "function", "is a function")
  t.equal(
    resolveUrl("https:
    "https:
  )
  var loc = "https:
  t.equal(
    resolveUrl(loc, "remove"),
    "https:
  )
  t.equal(
    resolveUrl(loc, "/static/scripts/app.js"),
    "https:
  )
  t.equal(
    resolveUrl(loc, "/static/scripts/app.js", "../source-maps/app.js.map"),
    "https:
  )
  t.equal(
    resolveUrl(loc, "/static/scripts/app.js", "../source-maps/app.js.map", "../coffee/app.coffee"),
    "https:
  )
  t.equal(
    resolveUrl(loc, "
    "https:
  )
})
test("edge cases", function(t) {
  t.plan(4)
  t["throws"](resolveUrl, /at least one argument/, "throws with no arguments")
  var accidentallyUndefined
  var result
  t.doesNotThrow(
    function() { result = resolveUrl(accidentallyUndefined) },
    "undefined is still an argument"
  )
  t.ok(result.match(/\/undefined$/), "undefined is stringified")
  t.equal(
    resolveUrl("http:
    "http:
    "arguments are stringified"
  )
})
