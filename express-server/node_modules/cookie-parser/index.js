'use strict'
var cookie = require('cookie')
var signature = require('cookie-signature')
module.exports = cookieParser
module.exports.JSONCookie = JSONCookie
module.exports.JSONCookies = JSONCookies
module.exports.signedCookie = signedCookie
module.exports.signedCookies = signedCookies
function cookieParser (secret, options) {
  var secrets = !secret || Array.isArray(secret)
    ? (secret || [])
    : [secret]
  return function cookieParser (req, res, next) {
    if (req.cookies) {
      return next()
    }
    var cookies = req.headers.cookie
    req.secret = secrets[0]
    req.cookies = Object.create(null)
    req.signedCookies = Object.create(null)
    if (!cookies) {
      return next()
    }
    req.cookies = cookie.parse(cookies, options)
    if (secrets.length !== 0) {
      req.signedCookies = signedCookies(req.cookies, secrets)
      req.signedCookies = JSONCookies(req.signedCookies)
    }
    req.cookies = JSONCookies(req.cookies)
    next()
  }
}
function JSONCookie (str) {
  if (typeof str !== 'string' || str.substr(0, 2) !== 'j:') {
    return undefined
  }
  try {
    return JSON.parse(str.slice(2))
  } catch (err) {
    return undefined
  }
}
function JSONCookies (obj) {
  var cookies = Object.keys(obj)
  var key
  var val
  for (var i = 0; i < cookies.length; i++) {
    key = cookies[i]
    val = JSONCookie(obj[key])
    if (val) {
      obj[key] = val
    }
  }
  return obj
}
function signedCookie (str, secret) {
  if (typeof str !== 'string') {
    return undefined
  }
  if (str.substr(0, 2) !== 's:') {
    return str
  }
  var secrets = !secret || Array.isArray(secret)
    ? (secret || [])
    : [secret]
  for (var i = 0; i < secrets.length; i++) {
    var val = signature.unsign(str.slice(2), secrets[i])
    if (val !== false) {
      return val
    }
  }
  return false
}
function signedCookies (obj, secret) {
  var cookies = Object.keys(obj)
  var dec
  var key
  var ret = Object.create(null)
  var val
  for (var i = 0; i < cookies.length; i++) {
    key = cookies[i]
    val = obj[key]
    dec = signedCookie(val, secret)
    if (val !== dec) {
      ret[key] = dec
      delete obj[key]
    }
  }
  return ret
}
