declare module "upath" {
  export interface ParsedPath {
    root: string;
    dir: string;
    base: string;
    ext: string;
    name: string;
  }
  export var VERSION: string;
  export function toUnix(p: string): string;
  export function normalizeSafe(p: string): string;
  export function normalizeTrim(p: string): string;
  export function joinSafe(...p: any[]): string;
  export function addExt(file: string, ext: string): string;
  export function trimExt(filename: string, ignoreExts?: string[], maxSize?: number): string;
  export function removeExt(filename: string, ext: string): string;
  export function changeExt(filename: string, ext: string, ignoreExts?: string[], maxSize?: number): string;
  export function defaultExt(filename: string, ext: string, ignoreExts?: string[], maxSize?: number): string;
  export function normalize(p: string): string;
  export function join(...paths: any[]): string;
  export function join(...paths: string[]): string;
  export function resolve(...pathSegments: any[]): string;
  export function isAbsolute(path: string): boolean;
  export function relative(from: string, to: string): string;
  export function dirname(p: string): string;
  export function basename(p: string, ext?: string): string;
  export function extname(p: string): string;
  export var sep: string;
  export var delimiter: string;
  export function parse(pathString: string): ParsedPath;
  export function format(pathObject: ParsedPath): string;
  export module posix {
    export function normalize(p: string): string;
    export function join(...paths: any[]): string;
    export function resolve(...pathSegments: any[]): string;
    export function isAbsolute(p: string): boolean;
    export function relative(from: string, to: string): string;
    export function dirname(p: string): string;
    export function basename(p: string, ext?: string): string;
    export function extname(p: string): string;
    export var sep: string;
    export var delimiter: string;
    export function parse(p: string): ParsedPath;
    export function format(pP: ParsedPath): string;
  }
  export module win32 {
    export function normalize(p: string): string;
    export function join(...paths: any[]): string;
    export function resolve(...pathSegments: any[]): string;
    export function isAbsolute(p: string): boolean;
    export function relative(from: string, to: string): string;
    export function dirname(p: string): string;
    export function basename(p: string, ext?: string): string;
    export function extname(p: string): string;
    export var sep: string;
    export var delimiter: string;
    export function parse(p: string): ParsedPath;
    export function format(pP: ParsedPath): string;
  }
}
