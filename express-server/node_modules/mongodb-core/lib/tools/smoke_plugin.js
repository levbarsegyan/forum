'use strict';
var fs = require('fs');
exports.attachToRunner = function(runner, outputFile) {
  var smokeOutput = { results: [] };
  var runningTests = {};
  var integraPlugin = {
    beforeTest: function(test, callback) {
      test.startTime = Date.now();
      runningTests[test.name] = test;
      callback();
    },
    afterTest: function(test, callback) {
      smokeOutput.results.push({
        status: test.status,
        start: test.startTime,
        end: Date.now(),
        test_file: test.name,
        exit_code: 0,
        url: ''
      });
      delete runningTests[test.name];
      callback();
    },
    beforeExit: function(obj, callback) {
      fs.writeFile(outputFile, JSON.stringify(smokeOutput), function() {
        callback();
      });
    }
  };
  process.on('uncaughtException', function(err) {
    for (var testName in runningTests) {
      smokeOutput.results.push({
        status: 'fail',
        start: runningTests[testName].startTime,
        end: Date.now(),
        test_file: testName,
        exit_code: 0,
        url: ''
      });
    }
    fs.writeFileSync(outputFile, JSON.stringify(smokeOutput));
    console.error(err.stack);
    process.exit(1);
  });
  runner.plugin(integraPlugin);
  return integraPlugin;
};
